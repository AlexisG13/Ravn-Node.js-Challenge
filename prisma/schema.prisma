// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

model User {
  id              String            @id @default(uuid())
  username        String            @unique
  email           String            @unique
  name            String
  profile         Profile?
  userAuth        UserAuth?
  userSettings    UserSettings?
  posts           Post[]
  comments        Comment[]
  PostReaction    PostReaction[]
  CommentReaction CommentReaction[]
}

model UserAuth {
  id         String  @id @default(uuid())
  email      String  @unique
  password   String
  username   String  @unique
  isVerified Boolean
  user       User    @relation(fields: [userId], references: [id])
  userId     String  @unique
}

model UserSettings {
  id        String  @id @default(uuid())
  showEmail Boolean
  showName  Boolean
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @unique
}

model Role {
  id   String @id @default(uuid())
  name String
}

model Profile {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
  status String
  photo  String
}

model Post {
  id           String         @id @default(uuid())
  title        String
  content      String
  isLive       Boolean
  author       User           @relation(fields: [authorId], references: [id])
  authorId     String
  comment      Comment[]
  PostReaction PostReaction[]
}

model Comment {
  id              String            @id @default(uuid())
  content         String
  isLive          Boolean
  post            Post              @relation(fields: [postId], references: [id])
  postId          String
  author          User              @relation(fields: [authorId], references: [id])
  authorId        String
  CommentReaction CommentReaction[]
}

model ReactionReference {
  id              String            @id @default(uuid())
  name            String            @unique
  PostReaction    PostReaction[]
  CommentReaction CommentReaction[]
}

model JwtBlackList {
  id  String @id @default(uuid())
  jwt String
}

model PostReaction {
  id                  String            @id @default(uuid())
  post                Post              @relation(fields: [postId], references: [id])
  user                User              @relation(fields: [userId], references: [id])
  reaction            ReactionReference @relation(fields: [reactionReferenceId], references: [id])
  postId              String
  userId              String
  reactionReferenceId String
}

model CommentReaction {
  id                  String            @id @default(uuid())
  comment             Comment           @relation(fields: [commentId], references: [id])
  user                User              @relation(fields: [userId], references: [id])
  reaction            ReactionReference @relation(fields: [reactionReferenceId], references: [id])
  userId              String
  reactionReferenceId String
  commentId           String
}
